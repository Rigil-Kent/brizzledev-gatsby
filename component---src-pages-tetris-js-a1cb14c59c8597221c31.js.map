{"version":3,"file":"component---src-pages-tetris-js-a1cb14c59c8597221c31.js","mappings":"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","sources":["webpack://brizzledev-portfolio/./src/components/Footer.js","webpack://brizzledev-portfolio/./src/components/SlideNav.js","webpack://brizzledev-portfolio/./src/components/Konami.js","webpack://brizzledev-portfolio/./src/components/Layout.js","webpack://brizzledev-portfolio/./src/pages/tetris.js"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nexport default function Footer() {\n\n  const data = useStaticQuery(graphql`\n  query Social {\n    allContentfulSocialLinks {\n      nodes {\n        name\n        icon {\n          url\n        }\n        url\n      }\n    }\n  }`)\n\n  return (\n    <footer>\n      <p>Find me on social media.</p>\n      <div className='footer-social-icons'>\n        { data\n          .allContentfulSocialLinks\n          .nodes\n          .map((link, index) => (\n                <a key={index} className='footer-social-icon' href={link.url} title={link.name} alt={link.name} target='_blank' rel='noreferrer'><img src={link.icon.url} alt={link.name} /></a>\n            )) \n        }\n      </div>\n      <p className='footer-copyright'>Copyright 2022. www.brizzle.dev</p>\n    </footer>\n  )\n}\n","import React from 'react'\n\n\n\n\nexport default function SlideNav() {\n\n  return (\n    <nav onClick={_ => {\n        document.querySelector('.container-all').style.transition = '0ms'\n        document.body.classList.toggle('nav-is-open')\n    }}>\n        <ul>\n            <li><a href='#home'>home</a></li>\n            <li><a href='#about'>about</a></li>\n            <li><a href='#portfolio'>portfolio</a></li>\n            <li><a href='#contact'>contact</a></li>\n        </ul>\n    </nav>\n  )\n}\n","import React, { useEffect } from 'react'\n\n\nexport default function Konami() {\n    \n    function isEqual(a, b) {\n        return a.length === b.length && a.every((value, index) => value === b[index])\n    }\n\n    useEffect(_ => {\n        const dullard = ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowLeft', 'a', 'ArrowRight', 'ArrowDown']\n        let keystrokes = []\n        let pressed = {}\n\n        const handleKeystrokes = (event) => {\n            let konami_div = event.target?.lastChild?.firstChild\n            let keyImages = konami_div?.firstChild?.childNodes\n\n\n            if (konami_div === null) return\n\n\n            pressed[event.key] = true\n\n            if (event.key === '`') {\n                console.log('Code entry')\n                konami_div.classList.add('is-open')\n                document.body.style.overflowY = 'hidden'\n            }\n\n\n            if (pressed['`']) {\n                let active = false\n\n                if (active) {\n                    delete pressed['`']\n                    active = false\n                    keystrokes.length = 0\n                    konami_div.classList.remove('is-open')\n                    keyImages.forEach((img) => {\n                        img.classList.remove('selected')\n                    })\n                    document.body.style.overflowY = 'scroll'\n                    return\n                }\n\n                active = true\n                \n                if (keystrokes.length > 6) keystrokes.length = 0\n\n                keystrokes.push(event.key)\n\n                keyImages.forEach((img, index) => {\n                    if (index < keystrokes.length) {\n                        img.classList.add('selected')\n                        console.log(img.classList)\n                    }\n                })\n\n                if (isEqual(keystrokes, dullard)) {\n                    delete pressed['`']\n                    window.location.href = '/tetris'\n                }\n\n                keystrokes.forEach((_, index) => {\n                    if (!isEqual(keystrokes.slice(0, index + 1), dullard.slice(0, index + 1))) {\n                        // reset keystrokes and indicators on mismatch\n                        keystrokes.length = 0\n                        keyImages.forEach((img) => {\n                            img.classList.remove('selected')\n                        })\n                    }\n                })\n            } else {\n                return\n            }\n\n        }\n\n        window.addEventListener('keydown', handleKeystrokes)\n\n        return _ => {\n            window.removeEventListener('keydown', handleKeystrokes)\n        }\n    }, [])\n\n  return (\n    <div className='konami'>\n        <div className='keyentry'>\n            <img src='keyboard-key-down.svg' alt='keyboard key down' />\n            <img src='keyboard-key-up.svg' alt='keyboard key up' />\n            <img src='keyboard-key-left.svg' alt='keyboard key left' />\n            <img src='keyboard-key-left.svg' alt='keyboard key left' />\n            <img src='keyboard-key-a.svg' alt='keyboard key a' />\n            <img src='keyboard-key-right.svg' alt='keyboard key right' />\n            <img src='keyboard-key-down.svg' alt='keyboard key down' />    \n        </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport Footer from './Footer';\n// import Navbar from './Navbar';\nimport '../styles/global.scss';\nimport SlideNav from './SlideNav';\nimport Konami from './Konami';\n\nexport default function Layout({ children }) {\n  return (\n    <div className='layout'>\n        <Konami />\n        <SlideNav />\n\n        <div className='page-content'>\n            { children }\n        </div>\n\n        <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nexport default function Tetris() {\n  return ( \n      <Layout>\n          <div>Tetris</div>\n      </Layout>\n  );\n}\n\n"],"names":["Footer","data","useStaticQuery","className","allContentfulSocialLinks","nodes","map","link","index","key","href","url","title","name","alt","target","rel","src","icon","SlideNav","onClick","_","document","querySelector","style","transition","body","classList","toggle","Konami","isEqual","a","b","length","every","value","useEffect","dullard","keystrokes","pressed","handleKeystrokes","event","konami_div","lastChild","firstChild","keyImages","childNodes","console","log","add","overflowY","active","remove","forEach","img","push","window","location","slice","addEventListener","removeEventListener","Layout","children","Tetris"],"sourceRoot":""}